{"version":3,"sources":["Component/corlog.png","Component/api.js","Component/Table.js","Component/Card.js","Component/cancel.svg","Component/Search.js","App.js","reportWebVitals.js","index.js"],"names":["stateInfo","method","url","headers","Info","useState","state","setState","useEffect","axios","request","then","response","console","log","data","catch","error","Table","country","active","deaths","recovered","confirmed","deltaconfirmed","deltarecovered","deltadeaths","style","color","Card","inf","deltainf","text","tcolor","cardstyle","borderTop","borderColor","className","Searchspan","spantext","info","setsearchCard","setsearchData","searchCard","searcheddata","dummy","undefined","Object","keys","map","item","district","filter","includes","item2","toLowerCase","startsWith","push","key","onClick","e","searchcarddata","Search","inputRef","useRef","spclass","setspclass","setsearhText","searchData","animationDelay","type","ref","onChange","target","value","handleInput","onBeforeInput","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","src","cancel","current","delta","deceased","App","db","dd","total_values","dt","state_wise","corlog","alt","marginBottom","colSpan","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,G,YAAA,IAA0B,oC,wBCInCA,EAAY,CAChBC,OAAQ,MACRC,IAAK,qEACLC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,qDAkBRC,EAdF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,KAYjB,OAVAC,qBAAU,WACRC,IAAMC,QAAQV,GAAWW,MAAK,SAAUC,GACtCC,QAAQC,IAAIF,EAASG,MACrBR,EAASK,EAASG,SACjBC,OAAM,SAAUC,GACjBJ,QAAQI,MAAMA,GACdV,EAASU,QAEV,CArBS,IAuBLX,G,OCKMY,EA7BD,SAAC,GAAoG,IAAlGC,EAAiG,EAAjGA,QAASC,EAAwF,EAAxFA,OAAQC,EAAgF,EAAhFA,OAAQC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,eAAgBC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAE5F,QAAIL,EAAS,IAGL,+BACI,6BACKF,IAEL,6BACKC,IAEL,+BACKG,EAAU,wCAAY,0CAAqBC,QAEhD,+BACKF,EAAU,wCAAY,sBAAMK,MAAO,CAAEC,MAAO,SAAtB,oBAAgDH,QAE3E,+BACKJ,EAAO,wCAAY,sBAAMM,MAAO,CAAEC,MAAO,OAAtB,oBAA8CF,YCKtEG,EAxBL,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAIC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,KAAKJ,EAAgB,EAAhBA,MAAMK,EAAU,EAAVA,OAC7BC,EAAU,CACVC,UAAW,YACXC,YAAYH,GAKhB,OAEI,sBAAKI,UAAS,oBAAeT,GAAYD,MAAOO,EAAhD,UAEI,6BAAKJ,IACI,WAARF,EAAiB,qCAClB,qBAAID,MAAO,CAACC,MAAMK,GAAlB,mBAAmCF,KAGnC,6BAAKC,QClBF,MAA0B,mCCMnCM,EAAa,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC5D5B,EAAO,GAGP6B,EAAe,GACfC,EAAQ,GAEZ,MAAiB,KAAbN,GAA4B,KAATC,QAAwBM,IAATN,GAGlCzB,EAAOgC,OAAOC,KAAKR,GAAMS,KAAI,SAACC,GAAD,OACzBV,EAAKU,GAAMC,YAEftC,QAAQC,IAAI,SAAUC,GAEtB4B,EAAaE,EAAQE,OAAOC,KAAKjC,GAAMqC,QAAO,SAACF,GAAD,OAAUH,OAAOC,KAAKjC,EAAKmC,IAAOG,SAASV,MAAe9B,QAAQC,IAAI,sBACpH6B,EAAa9B,QAAQC,IAAI,SAAUC,EAAK8B,EAAM,IAAIF,IAAe9B,QAAQC,IAAI,kBAC7E6B,EAAaD,EAAc3B,EAAK8B,EAAM,IAAIF,IAAe9B,QAAQC,IAAI,MAG3DiC,OAAOC,KAAKjC,GAAMkC,KAAI,SAACC,GAAD,OAC5BH,OAAOC,KAAKjC,EAAKmC,OAMAD,KAAI,SAACC,GAAD,OAAUA,EAAKD,KAAI,SAACK,GACrCA,EAAMC,cAAcC,WAAWjB,EAASgB,gBACxCX,EAAaa,KAAKH,SAOtB,qBAAKjB,UAAU,aAAf,SAEKM,EAAa,yBAAgBC,EAAaK,KAAI,SAACC,EAAMQ,GAAP,OAC3C,qBAAKrB,UAAU,UAAoBsB,QAAS,SAACC,GAAD,OAAOC,EAAeD,EAAGV,EAAMT,EAAeC,IAA1F,SAA4GQ,GAA9EQ,SAMnC,yBAGTG,EAAiB,SAACD,EAAGV,EAAMT,GAC7B5B,QAAQC,IAAI,mBACZ2B,EAAcS,IAsEHY,EAlEA,SAAC,GAAc,IAAZtB,EAAW,EAAXA,KACd3B,QAAQC,IAAI,oBACZ,IAAMiD,EAAWC,iBAAO,IACpBhB,EAAO,GAHc,EAKK3C,mBAAS,sBALd,mBAKlB4D,EALkB,KAKTC,EALS,OAMU7D,mBAAS,IANnB,mBAMN8D,GANM,aAOW9D,mBAAS,IAPpB,mBAOlBsC,EAPkB,KAONF,EAPM,OAQWpC,mBAAS,IARpB,mBAQlB+D,EARkB,KAQN1B,EARM,KAiCzB,OACI,sBAAKL,UAAU,SAAf,UACI,sBAAKA,UAAU,uBAAuBV,MAAO,CAAE0C,eAAgB,SAA/D,UACI,uBAAOC,KAAK,OAAOC,IAAKR,EAAUS,SAAU,SAACZ,GAAD,OAlBpC,SAACA,GACjBO,EAAaP,EAAEa,OAAOC,OACtBjC,EAAc,IACdC,EAAc,IAe6CiC,CAAYf,IAAIgB,cA3B/D,WACZV,EAAW,gBA2BH,sBAAM7B,UAAW4B,EAAjB,iCACA,sBAAK5B,UAAU,gBAAf,UAA+B,sBAAKwC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAA1K,UAC3B,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,aACpC,qBAAKC,IAAKC,EAAQnC,QAlBd,WAChBQ,EAAa,IACb1B,EAAc,IACdC,EAAc,IACdqB,EAASgC,QAAQrB,MAAQ,GACzBR,EAAW,uBAayCY,MAAM,KAAKC,OAAO,OAE1D,cAAC,EAAD,CAAYtC,cAAeA,EAAeE,WAAYA,EAAYD,cAAeA,EAAeH,SAAUwB,EAASgC,QAAQrB,MAAOlC,KAAMA,UAI/I3B,QAAQC,IAAI,aAAc6B,GAC1B,oBAAIN,UAAU,UAAd,SAAyBM,EAAa,qCAAQoB,EAASgC,QAAQrB,MAAQ/B,EAAjC,OAAuD,wBAG7F9B,QAAQC,IAAI,aAAcsD,GAC1BvD,QAAQC,IAAI,SAAUsD,EAAWpB,EAAK,KACtCnC,QAAQC,IAAI,OAAQkC,QACGF,IAAtBsB,EAAWhD,OAET,sBAAKiB,UAAU,WAAf,UACI,cAAC,EAAD,CAAMP,IAAKsC,EAAWhD,OAAQW,SAAS,IAAIC,KAAK,SAASJ,MAAM,SAASK,OAAO,qBAC/E,cAAC,EAAD,CAAMH,IAAKsC,EAAW7C,UAAWQ,SAAUqC,EAAW4B,MAAMzE,UAAWS,KAAK,YAAYJ,MAAM,SAASK,OAAO,qBAC9G,cAAC,EAAD,CAAMH,IAAKsC,EAAW9C,UAAWS,SAAUqC,EAAW4B,MAAM1E,UAAWU,KAAK,YAAYJ,MAAM,QAAQK,OAAO,UAC7G,cAAC,EAAD,CAAMH,IAAKsC,EAAW6B,SAAUlE,SAAUqC,EAAW4B,MAAMC,SAAUjE,KAAK,SAASJ,MAAM,MAAMK,OAAO,WAExG,6BChCHiE,MAlFf,WAGE,IAAIC,EAAK/F,IACLgG,EAAKD,EAAGE,aACRC,EAAKH,EAAGI,WAIRvD,EAAO,GASX,OAPAoD,EAAKpD,EAAOD,OAAOC,KAAKoD,GAAMvF,QAAQC,IAAI,QAQxC,sBAAKuB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gDACA,qBAAKwD,IAAKW,EAAQC,IAAI,kBAEvBL,EAAK,gDAAmBA,EAAGpD,EAAK,OAAW,yBAE9C,cAAC,EAAD,CAAQR,KAAM8D,IACd,oBAAIjE,UAAU,cAAd,SAA4B,gDAC3BxB,QAAQC,IAAI,UACb,oBAAIa,MAAO,CAAEmD,MAAO,SAInBsB,EAAK,sBAAK/D,UAAU,WAAf,UACJ,cAAC,EAAD,CAAMP,IAAKsE,EAAGpD,EAAK,IAAKjB,SAAUqE,EAAGpD,EAAK,IAAKhB,KAAK,SAASJ,MAAM,SAASK,OAAO,qBACnF,cAAC,EAAD,CAAMH,IAAKsE,EAAGpD,EAAK,IAAKjB,SAAUqE,EAAGpD,EAAK,IAAKhB,KAAK,YAAYJ,MAAM,SAASK,OAAO,qBACtF,cAAC,EAAD,CAAMH,IAAKsE,EAAGpD,EAAK,IAAKjB,SAAUqE,EAAGpD,EAAK,IAAKhB,KAAK,YAAYJ,MAAM,QAAQK,OAAO,UACrF,cAAC,EAAD,CAAMH,IAAKsE,EAAGpD,EAAK,IAAKjB,SAAUqE,EAAGpD,EAAK,IAAKhB,KAAK,SAASJ,MAAM,MAAMK,OAAO,WAG9E,mEAGJ,oBAAII,UAAU,YAAd,SAA0B,iDAC1B,oBAAIV,MAAO,CAAE+E,aAAc,OAAQ5B,MAAO,SAC1C,kCACE,gCACE,+BACE,yCAGA,wCAGA,2CAGA,2CAGA,6CAKJ,gCACGsB,EAAKrD,OAAOC,KAAKsD,GAAIrD,KAAI,SAACC,EAAMQ,GAAP,OAAgB,cAAC,EAAD,CAAiBtC,OAAQkF,EAAGpD,GAAM9B,OAAQG,UAAW+E,EAAGpD,GAAM3B,UACtGF,OAAQiF,EAAGpD,GAAM7B,OACjBK,YAAa4E,EAAGpD,GAAMxB,YACtBF,eAAgB8E,EAAGpD,GAAM1B,eACzBF,UAAWgF,EAAGpD,GAAM5B,UACpBG,eAAgB6E,EAAGpD,GAAMzB,eACzBN,QAAS+B,GAN2CQ,MAM9B,6BAAI,oBAAIiD,QAAQ,IAAZ,iDCrEvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnG,MAAK,YAAkD,IAA/CoG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac5c6b45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/corlog.d898a50a.png\";","import axios from \"axios\";\nimport { useState, useEffect } from 'react';\nconst count = 1;\n\nconst stateInfo = {\n  method: 'GET',\n  url: 'https://corona-virus-world-and-india-data.p.rapidapi.com/api_india',\n  headers: {\n    'x-rapidapi-key': '959b4243e4mshbc54fc2a3419f89p1bb2d4jsndd5a39fb288f',\n    'x-rapidapi-host': 'corona-virus-world-and-india-data.p.rapidapi.com'\n  }\n};\n\nconst Info = () => {\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    axios.request(stateInfo).then(function (response) {\n      console.log(response.data);\n      setState(response.data);\n    }).catch(function (error) {\n      console.error(error);\n      setState(error);\n    })\n  }, [count]);\n\n  return state;\n}\nexport default Info;\n","\nconst Table = ({ country, active, deaths, recovered, confirmed, deltaconfirmed, deltarecovered, deltadeaths }) => {\n\n    if (deaths > 0) {\n        return (\n\n            <tr>\n                <td>\n                    {country}\n                </td>\n                <td>\n                    {active}\n                </td>\n                <td>\n                    {confirmed}<span>&nbsp;<span>&#8593;</span>{deltaconfirmed}</span>\n                </td>\n                <td>\n                    {recovered}<span>&nbsp;<span style={{ color: \"green\" }}>&#8593;</span>{deltarecovered}</span>\n                </td>\n                <td>\n                    {deaths}<span>&nbsp;<span style={{ color: \"red\" }}>&#8593;</span>{deltadeaths}</span>\n                </td>\n\n            </tr>);\n    }\n    else {\n        return true;\n    }\n\n}\nexport default Table;","import React from 'react';\nconst Card=({inf,deltainf,text,color,tcolor})=>{\n    let cardstyle={\n        borderTop: '5px solid',\n        borderColor:tcolor,\n        \n       };\n       \n     \n    return(\n       \n        <div className={`cardclass ${color}` }   style={cardstyle}>\n\n            <h4>{inf}</h4>\n            {color===\"Orange\"?<h2>   </h2>:\n            <h5 style={{color:tcolor}}>&#8593;{deltainf}</h5>\n            }\n\n            <h3>{text}</h3>\n\n        </div>\n    )\n  \n    \n}\n export default Card;","export default __webpack_public_path__ + \"static/media/cancel.5bec4f69.svg\";","import { useEffect, useState, useRef } from 'react';\nimport cancel from './cancel.svg';\nimport Card from './Card'\n\n\n\nconst Searchspan = ({ spantext, info, setsearchCard, setsearchData, searchCard }) => {\n    let data = [];\n    let disdata = [];\n    let searchdata = [];\n    let searcheddata = [];\n    let dummy = [];\n\n    if (spantext !== \"\" && info !== \"\" && info !== undefined) {\n\n\n        data = Object.keys(info).map((item) =>\n            info[item].district\n        )\n        console.log(\"states\", data);\n\n        searchCard ? dummy = Object.keys(data).filter((item) => Object.keys(data[item]).includes(searchCard)) : console.log(\"keys not generated\");\n        searchCard ? console.log(\"dummy1\", data[dummy[0]][searchCard]) : console.log(\"dummy1 nothing\");\n        searchCard ? setsearchData(data[dummy[0]][searchCard]) : console.log(\"no\");\n\n\n        disdata = Object.keys(data).map((item) =>\n            Object.keys(data[item])\n        );\n        // console.log(\"district\",disdata)\n        // console.log(\"ssss\",disdata[0])\n\n\n        searchdata = disdata.map((item) => item.map((item2) => {\n            if (item2.toLowerCase().startsWith(spantext.toLowerCase())) {\n                searcheddata.push(item2)\n            }\n        }))\n        //  console.log(\"searchdata\",searchdata)\n        //  console.log(\"searcheddata\",searcheddata)\n        return (\n\n            <div className=\"searchspan\">\n\n                {searchCard ? <span></span> : searcheddata.map((item, key) => (\n                    <div className=\"spanbox\" key={key} onClick={(e) => searchcarddata(e, item, setsearchCard, setsearchData)} >{item}</div>))}\n\n            </div>\n        )\n    }\n    else {\n        return <div></div>\n    }\n}\nconst searchcarddata = (e, item, setsearchCard) => {\n    console.log(\"searchdataclick\")\n    setsearchCard(item);\n\n\n}\nconst Search = ({ info }) => {\n    console.log(\"SearchMainrender\");\n    const inputRef = useRef(\"\");\n    let keys = [];\n    let dkeys = [];\n    const [spclass, setspclass] = useState(\"search-placeholder\")\n    const [searchText, setsearhText] = useState(\"\")\n    const [searchCard, setsearchCard] = useState(\"\")\n    const [searchData, setsearchData] = useState({})\n    const disSpan = () => {\n        setspclass(\"disappear\");\n    }\n    const appSpan = () => {\n        setspclass(\"search-placeholder\");\n        inputRef.current.value = \"\";\n        setsearhText(\"\");\n        setsearchData({});\n    }\n    const handleInput = (e) => {\n        setsearhText(e.target.value);\n        setsearchCard(\"\");\n        setsearchData({});\n    }\n    const cancelClick = () => {\n        setsearhText(\"\");\n        setsearchCard(\"\");\n        setsearchData({});\n        inputRef.current.value = \"\";\n        setspclass(\"search-placeholder\");\n    }\n    // const setCard=(searchCard)=>{\n    //     setsearchCard(searchCard);\n    // }\n    return (\n        <div className=\"Search\">\n            <div className=\"search-input-wrapper\" style={{ animationDelay: '500ms' }}>\n                <input type=\"text\" ref={inputRef} onChange={(e) => handleInput(e)} onBeforeInput={disSpan} />\n                <span className={spclass}>search by city name</span>\n                <div className=\"search-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>\n                    <img src={cancel} onClick={cancelClick} width=\"20\" height=\"20\" />\n\n                    <Searchspan setsearchCard={setsearchCard} searchCard={searchCard} setsearchData={setsearchData} spantext={inputRef.current.value} info={info} />\n                </div>\n\n            </div>\n            {console.log(\"SearchCard\", searchCard)}\n            {<h2 className=\"disname\">{searchCard ? <span> {inputRef.current.value = searchCard} </span> : <p></p>}</h2>}\n            {/* {(searchData != null && searchData != undefined) ? keys = Object.keys(searchData) : console.log(\"none\")}\n                {(searchData != null && searchData != undefined) ? dkeys = Object.keys(searchData.delta) : console.log(\"none\")} */}\n            {console.log(\"Searchdata\", searchData)}\n            {console.log(\"Active\", searchData[keys[0]])}\n            {console.log(\"keys\", keys)}\n            {(searchData.active !== undefined) ?\n\n                <div className=\"countryi\">\n                    <Card inf={searchData.active} deltainf=\"0\" text=\"Active\" color=\"Orange\" tcolor=\"rgb(255 219 150)\" />\n                    <Card inf={searchData.confirmed} deltainf={searchData.delta.confirmed} text=\"Confirmed\" color=\"yellow\" tcolor=\"rgb(210 209 108)\" />\n                    <Card inf={searchData.recovered} deltainf={searchData.delta.recovered} text=\"Recovered\" color=\"green\" tcolor=\"green\" />\n                    <Card inf={searchData.deceased} deltainf={searchData.delta.deceased} text=\"Deaths\" color=\"red\" tcolor=\"red\" />\n                </div>\n                : <span></span>}\n        </div>\n    )\n}\nexport default Search;","import './App.css';\nimport corlog from './Component/corlog.png'\nimport Info from './Component/api.js'\nimport Table from './Component/Table.js'\nimport Card from './Component/Card.js'\nimport Search from './Component/Search';\n\n\nfunction App() {\n\n\n  let db = Info();\n  let dd = db.total_values;\n  let dt = db.state_wise;\n  // let det = [];\n\n\n  let keys = [];\n  // loop through the keys\n  dd ? keys = Object.keys(dd) : console.log(\"none\");\n  // dd ? det = Object.keys(dt).map((item) => dt[item].district):console.log(\"\");\n  // dd?console.log(det):console.log(\"\");\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"inheader\">\n          <h1>Corona Tracker</h1>\n          <img src={corlog} alt=\"corona img\" /></div>\n\n        {dd ? <p>Last Updated : {dd[keys[6]]}</p> : <p></p>}\n      </div>\n      <Search info={dt} />\n      <h2 className=\"countryname\"><span>India Info</span></h2>\n      {console.log(\"render\")}\n      <hr style={{ width: \"80%\" }}></hr>\n\n      {/* {dd ? console.log(keys) : null}\n      {dd ? console.log(dd[keys[0]]) : console.log(\"none\")} */}\n      {dd ? <div className=\"countryi\">\n        <Card inf={dd[keys[0]]} deltainf={dd[keys[3]]} text=\"Active\" color=\"Orange\" tcolor=\"rgb(255 219 150)\" />\n        <Card inf={dd[keys[1]]} deltainf={dd[keys[3]]} text=\"Confirmed\" color=\"yellow\" tcolor=\"rgb(210 209 108)\" />\n        <Card inf={dd[keys[8]]} deltainf={dd[keys[5]]} text=\"Recovered\" color=\"green\" tcolor=\"green\" />\n        <Card inf={dd[keys[2]]} deltainf={dd[keys[4]]} text=\"Deaths\" color=\"red\" tcolor=\"red\" />\n\n      </div>\n        : <h3>Data is Loading Please wait......</h3>}\n\n\n      <h2 className=\"statename\"><span>States Info</span></h2>\n      <hr style={{ marginBottom: \"20px\", width: \"80%\" }}></hr>\n      <table>\n        <thead>\n          <tr>\n            <th>\n              COUNTRY\n        </th>\n            <th>\n              ACTIVE\n        </th>\n            <th>\n              CONFIRMED\n        </th>\n            <th>\n              RECOVERED\n        </th>\n            <th>\n              DEATHS\n        </th>\n          </tr>\n        </thead>\n        <tbody>\n          {dd ? Object.keys(dt).map((item, key) => (<Table key={key} active={dt[item].active} confirmed={dt[item].confirmed}\n            deaths={dt[item].deaths}\n            deltadeaths={dt[item].deltadeaths}\n            deltaconfirmed={dt[item].deltaconfirmed}\n            recovered={dt[item].recovered}\n            deltarecovered={dt[item].deltarecovered}\n            country={item} />)) : <tr><td colSpan=\"5\">India Info Loading  ....</td></tr>}\n\n        </tbody>\n      </table>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}